<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.offcn.mapper.ClassesMapper">
  <resultMap id="BaseResultMap" type="com.offcn.pojo.Classes">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <select id="getAllClasses" resultType="classes">
    select * from classes
  </select>
  <!--  -->
  <select id="getClassPager" resultType="Classes">
        select * from classes limit #{skip},#{size}
    </select>
    
    <select id="getCLassId" parameterType="int" resultType="Classes">
        select * from classes where id=#{id}
    </select>
    
    <select id="getClassesCount" resultType="int">select count(*) from classes</select>
    
    <insert id="insert" parameterType="Classes">
       insert into classes (name, type, status)
	    values (#{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR},#{status,jdbcType=INTEGER})
    </insert>
   
    <delete id="delete">
        delete from classes where id=#{id}
    </delete>
    
    <update id="update" parameterType="Classes">
         update classes
	    <set>
	      <if test="name != null">
	        name = #{name,jdbcType=VARCHAR},
	      </if>
	      <if test="type != null">
	        type = #{type,jdbcType=VARCHAR},
	      </if>
	      <if test="status != null">
	        status = #{status,jdbcType=INTEGER},
	      </if>
	    </set>
	    where id = #{id,jdbcType=INTEGER}
    </update>
    
    <resultMap type="com.offcn.pojo.Classes" id="getStudent">
       <id column="id" jdbcType="INTEGER" property="id" />
	    <result column="name" jdbcType="VARCHAR" property="name" />
	    <result column="type" jdbcType="VARCHAR" property="type" />
	    <result column="status" jdbcType="INTEGER" property="status" />
	    <collection property="slist" ofType="com.offcn.pojo.Student">
	       <id column="id" jdbcType="INTEGER" property="id" />
		    <result column="name" jdbcType="VARCHAR" property="name" />
		    <result column="sex" jdbcType="VARCHAR" property="sex" />
		    <result column="address" jdbcType="VARCHAR" property="address" />
		    <result column="tel" jdbcType="VARCHAR" property="tel" />
		    <result column="classid" jdbcType="INTEGER" property="classid" />
		    <result column="usertype" jdbcType="INTEGER" property="usertype" />
		    <result column="password" jdbcType="VARCHAR" property="password" />
		    <result column="loginname" jdbcType="VARCHAR" property="loginname" />
	    </collection>
	    
    </resultMap>
  
    <select id="getStuByid" parameterType="int" resultMap="getStudent">
       select s.*,c.name classname from student s,classes c where s.classid=c.id and c.id=#{int}
    </select>

  
 <!--  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, type, status
  </sql>
  <select id="selectByExample" parameterType="com.offcn.pojo.ClassesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from classes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from classes
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from classes
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.offcn.pojo.ClassesExample">
    delete from classes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.offcn.pojo.Classes">
    insert into classes (id, name, type, 
      status)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.offcn.pojo.Classes">
    insert into classes
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.offcn.pojo.ClassesExample" resultType="java.lang.Long">
    select count(*) from classes
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update classes
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update classes
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.offcn.pojo.Classes">
    update classes
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.offcn.pojo.Classes">
    update classes
    set name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update> -->
</mapper>